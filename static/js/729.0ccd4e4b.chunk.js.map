{"version":3,"file":"static/js/729.0ccd4e4b.chunk.js","mappings":"0MACA,EAAuB,wBAAvB,EAAqD,uB,SCmBrD,EAhBkB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACbC,GAAWC,EAAAA,EAAAA,MACjB,OACE,eAAmBC,UAAWC,EAA9B,UACE,UAAC,KAAD,CAASC,GAAE,kBAAaL,EAAMM,IAAMC,MAAO,CAAEC,KAAMP,GAAnD,WACE,gBACEE,UAAWC,EACXK,IAAG,0CAAqCT,EAAMU,aAC9CC,IAAI,gBAELX,EAAMY,UAPFZ,EAAMM,KCNnB,EAAuB,wBCcvB,EAVkB,SAAC,GAAgB,IAAdO,EAAa,EAAbA,OACnB,OACE,eAAIV,UAAWC,EAAf,SACGS,EAAOC,KAAI,SAAAd,GACV,OAAO,SAAC,EAAD,CAAWA,MAAOA,GAAYA,EAAMM,W,kJCRnD,EAAuB,wBAAvB,EAAwD,0B,SC4BxD,EA1BkB,SAAC,GAA+B,IAA7BS,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAM7B,OACE,0BACE,kBAAMD,SAPW,SAAAE,GACnBA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,OAAOpB,MAAMqB,MAC7BN,EAASI,IAIuBhB,UAAWC,EAAzC,WACE,4BACE,kBACEkB,KAAK,OACLC,KAAK,QACLC,aAAa,MACbC,WAAS,EACTC,YAAaV,GAA4B,oBAG7C,mBAAQM,KAAK,SAASnB,UAAWC,EAAjC,0B,mBCbKuB,EAAS,WACpB,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMjB,EAAcgB,EAAaE,IAAI,eAoCrC,OAvBAC,EAAAA,EAAAA,YAAU,WAAM,wCAKd,WAAiCnB,GAAjC,mGAEuBoB,EAAAA,EAAAA,IAAgBpB,GAFvC,cAEUqB,EAFV,gBAGyBA,EAAKC,QAH9B,OAK0B,KAFhBzB,EAHV,QAKe0B,QACTC,EAAAA,GAAAA,MAAY,yCAA0C,CACpDC,SAAU,MAGdX,EAAgBjB,GAVpB,kDAYI6B,QAAQC,IAAI,CAAEC,MAAK,OAZvB,0DALc,wBACT5B,GADS,oCAoBd6B,CAAkB7B,KACjB,CAACA,KAGF,iBAAKb,UAAWC,EAAAA,QAAAA,OAAhB,WACE,SAAC,EAAD,CAAWW,SApCM,SAAAI,GACdA,EAOLc,EAAgB,CAAEjB,YAAaG,IAN7BqB,EAAAA,GAAAA,MAAY,qBAAsB,CAChCC,SAAU,OAiCuBzB,YAAaA,IAC/CA,IAAe,SAAC8B,EAAA,EAAD,CAAWjC,OAAQgB,S,0MChDnCkB,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAW,mCAAG,oGACFD,IAAAA,IAAA,sCAAyCD,IADvC,cACnBG,EADmB,yBAElBA,EAASb,MAFS,2CAAH,qDAKXD,EAAe,mCAAG,WAAMjB,GAAN,uFACN6B,IAAAA,IAAA,8BACE7B,EADF,oBACmB4B,IAFb,cACvBG,EADuB,yBAItBA,EAASb,MAJa,2CAAH,sDAOfc,EAAgB,mCAAG,WAAM7C,GAAN,uFACP0C,IAAAA,IAAA,gBAAmB1C,EAAnB,oBAAiCyC,IAD1B,cACxBG,EADwB,yBAEvBA,EAASb,MAFc,2CAAH,sDAKhBe,EAAgB,mCAAG,WAAM9C,GAAN,uFACP0C,IAAAA,IAAA,iBAAoB1C,EAApB,4BAA0CyC,IADnC,cACxBG,EADwB,yBAEvBA,EAASb,MAFc,2CAAH,sDAKhBgB,EAAgB,mCAAG,WAAM/C,GAAN,uFACP0C,IAAAA,IAAA,iBAAoB1C,EAApB,4BAA0CyC,IADnC,cACxBG,EADwB,yBAEvBA,EAASb,MAFc,2CAAH,uD,2BC1B7B,WAAgB,OAAS","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://goit-react-hw-05-movies/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx","services/api.js","webpack://goit-react-hw-05-movies/./src/pages/Movies/Movies.module.css?82ee"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"MovieCard_item__c3tx6\",\"img\":\"MovieCard_img__YZsvZ\"};","import { NavLink, useLocation } from 'react-router-dom';\nimport styles from './MovieCard.module.css';\nimport PropTypes from 'prop-types';\n\nconst MovieCard = ({ movie }) => {\n  const location = useLocation();\n  return (\n    <li key={movie.id} className={styles.item}>\n      <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n        <img\n          className={styles.img}\n          src={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`}\n          alt=\"movie.title\"\n        />\n        {movie.title}\n      </NavLink>\n    </li>\n  );\n};\n\nexport default MovieCard;\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    profile_path: PropTypes.string,\n  }),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__yjDCC\"};","import React from 'react';\nimport MovieCard from 'components/MovieCard';\nimport styles from './MovieList.module.css';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ movies }) => {\n  return (\n    <ul className={styles.list}>\n      {movies.map(movie => {\n        return <MovieCard movie={movie} key={movie.id} />;\n      })}\n    </ul>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.array,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchBar_form__gW7Gj\",\"button\":\"SearchBar_button__T7RTc\"};","import styles from './SearchBar.module.css';\nimport PropTypes from 'prop-types';\n\nconst SearchBar = ({ onSubmit, searchQuery }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    const query = e.target.movie.value;\n    onSubmit(query);\n  };\n  return (\n    <div>\n      <form onSubmit={handleSubmit} className={styles.form}>\n        <label>\n          <input\n            type=\"text\"\n            name=\"movie\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder={searchQuery ? searchQuery : 'Search movie'}\n          ></input>\n        </label>\n        <button type=\"submit\" className={styles.button}>\n          Search\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default SearchBar;\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func,\n  searchQuery: PropTypes.string,\n};\n","import { getSearchMovies } from '../../services/api';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport MovieList from 'components/MovieList';\nimport styles from './Movies.module.css';\n\nexport const Movies = () => {\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('searchQuery');\n\n  const handleSubmit = query => {\n    if (!query) {\n      toast.error('Enter search value', {\n        duration: 1000,\n      });\n\n      return;\n    }\n    setSearchParams({ searchQuery: query });\n  };\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    async function fetchSearchMovies(searchQuery) {\n      try {\n        const data = await getSearchMovies(searchQuery);\n        const movies = await data.results;\n\n        if (movies.length === 0) {\n          toast.error('Movies from this serch query not found', {\n            duration: 1000,\n          });\n        }\n        setSearchMovies(movies);\n      } catch (error) {\n        console.log({ error });\n      }\n    }\n    fetchSearchMovies(searchQuery);\n  }, [searchQuery]);\n\n  return (\n    <div className={styles.movies}>\n      <SearchBar onSubmit={handleSubmit} searchQuery={searchQuery} />\n      {searchQuery && <MovieList movies={searchMovies} />}\n    </div>\n  );\n};\n","import axios from 'axios';\n\nconst API_KEY = 'cdd1c73df14b33d6290e56a1d1d58143';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTranding = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getSearchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?query=${query}&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getMoviesDetaile = async id => {\n  const response = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMoviesCredits = async id => {\n  const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMoviesReviews = async id => {\n  const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movies\":\"Movies_movies__TE99a\"};"],"names":["movie","location","useLocation","className","styles","to","id","state","from","src","poster_path","alt","title","movies","map","onSubmit","searchQuery","e","preventDefault","query","target","value","type","name","autoComplete","autoFocus","placeholder","Movies","useState","searchMovies","setSearchMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","getSearchMovies","data","results","length","toast","duration","console","log","error","fetchSearchMovies","MovieList","API_KEY","axios","getTranding","response","getMoviesDetaile","getMoviesCredits","getMoviesReviews"],"sourceRoot":""}